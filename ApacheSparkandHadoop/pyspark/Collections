#------------------
#Hands-on Exercise: Collections 
#-----------------

line_lst = []
lines = []
filename = ('data/loudacre.log')
file = open(filename,'rt')
while True:
    line = file.readline()
    if not line:
        break
    line_lst = line.split(',')
    lines.append(line_lst)
file.close()

len(lines)

len(line_lst)

print("\nlines[375][2]: ", lines[375][2], "\nlines[410][2]: ", lines[410][2], "\nlines[435][2]: ", lines[435][2])

loglist1 = []

filename = ('data/loudacre.log')
file = open(filename,'rt')
while True:
    line = file.readline()
    if not line:
        break
    loglist1.append(line) 

file.close()

loglist2 = []

filename = ('data/loudacre.log')
file = open(filename,'rt')
while True:
    line = file.readlines()
    if not line:
        break
    loglist2.append(line) 

file.close()

print('len(loglist1): ', len(loglist1))
print('len(loglist2): ', len(loglist2))

if loglist1 == loglist2:
    print("EQUALS")
print("NOT EQUALS")


loglist2.append(line)
print('len(loglist1): ', len(loglist1))
print('len(loglist2): ', len(loglist2))
if loglist1 == loglist2:
    print("EQUALS")
print("NOT EQUALS")


loglist1 += loglist2
print('len(loglist1): ', len(loglist1))
print('len(loglist2): ', len(loglist2))
if loglist1 == loglist2:
    print("EQUALS")
print("NOT EQUALS")

loglist1 = []
filename = ('data/loudacre.log')
file = open(filename,'rt')
while True:
    line = file.readline()
    if not line:
        break
    loglist1.append(line)

file.close()

loglist2 = []

filename = ('data/loudacre.log')
file = open(filename,'rt')
while True:
    line = file.readlines()
    if not line:
        break
    loglist2.append(line)

file.close()

print('len(loglist1): ', len(loglist1))
print('len(loglist2): ', len(loglist2))

len(loglist1):  500
len(loglist2):  1

if loglist1 == loglist2:
    print("EQUALS")
print("NOT EQUALS")

loglist2.append(line)
print('len(loglist1): ', len(loglist1))
print('len(loglist2): ', len(loglist2))
if loglist1 == loglist2:
    print("EQUALS")
print("NOT EQUALS")

len(loglist1):  500
len(loglist2):  2
loglist1 += loglist2
print('len(loglist1): ', len(loglist1))
print('len(loglist2): ', len(loglist2))
if loglist1 == loglist2:
    print("EQUALS")
print("NOT EQUALS")

len(loglist1):  502
len(loglist2):  2

def phonegen():
    d1=d2=d3=d4=d5=d6=d7 = 0
    phonelist = []
    for d1 in range(1,10):
        for d2 in range(1,10):
            for d3 in range(1,10):
                for d4 in range(0,10):                          # – Skip zeroes in the exchange ﬁeld
                    for d5 in range(0,10):
                        for d6 in range(0,10):
                            for d7 in range(0,10):
                                phone = '555' + '-' + str(d1) + str(d2) + str(d3) 
                                phone = phone + '-' + str(d4) + str(d5) + str(d6) + str(d7)
                                phonelist.append(phone)
    return phonelist

# -- test program
list_of_phones = phonegen()
for each_phone in list_of_phones:
    # send_message(each_phone)
    print(each_phone)

#-- Global phone number
phonenum = "- "

# --- Generate all phone numbers in the target area codes
def phonegen():
    target_area_codes = [555, 205, 251, 256, 334, 907, 480, 520,
    623, 928, 501, 870, 209, 213, 310, 323, 408, 415, 510, 530, 559,
    562, 619, 626, 650, 661, 707, 714, 760, 805, 818, 831, 858, 909,
    916, 925, 949, 303, 719, 720, 970, 203, 860, 302, 305, 321, 352,
    386, 407, 561, 727, 754, 772, . . .  . . . . . .  . . . . . 704,
    828, 910, 919, 980, 701, 216, 234, 330, 419, 440, 513, 614, 740,
    717, 724, 814, 878, 401, 803, 843, 864, 210, 214, 254, 281, 361,
    409, 469, 512, 682, 713, 806, 817, 830, 832, 903, 915, 936, 940,
    956, 972, 979, 435, 801, 802, 276, 434, 540, 571, 703, 757, 804,
    206, 253, 360, 425, 509, 715, 920, 307]
    global phonenum
    d1=d2=d3=d4=d5=d6=d7 = 0
    for d1 in range(1,10):
        for d2 in range(1,10):
            for d3 in range(1,10):
                for d4 in range(0,10):                          # – Skip zeroes in the exchange ﬁeld
                    for d5 in range(0,10):
                        for d6 in range(0,10):
                            for d7 in range(0,10):
                                phone = '555' + '-' + str(d1) + str(d2) + str(d3) 
                                phone = phone + '-' + str(d4) + str(d5) + str(d6) + str(d7)
                                phonenum = phone
    yield phonenum

it = 0
for phonenum in phonegen():
    if it > 50:
        break
    print phonenum
    it += 1