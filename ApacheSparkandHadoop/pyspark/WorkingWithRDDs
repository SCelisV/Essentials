#------------------
#Hands-On Exercise: Working With RDDs
#------------------

#export PYSPARK_DRIVER_PYTHON=ipython
#PYSPARK_DRIVER_PYTHON_OPTS=ipython
#pyspark

spark

#scelisdev02@cca175-m:~/training_materials/devsh/exercises$ cat $DEVDATA/frostroad.txt
#scelisdev02@cca175-m:~/training_materials/devsh/exercises$ hdfs dfs -put $DEVDATA/frostroad.txt /devsh_loudacre/

myRDD = sc.textFile("/devsh_loudacre/frostroad.txt")

# myRDD.
myRDD.count()
lines = myRDD.collect()
type(lines)
for line in lines: print(line)

#scelisdev02@cca175-m:~/training_materials/devsh/exercises$ cat $DEVDATA/makes1.txt 
#scelisdev02@cca175-m:~/training_materials/devsh/exercises$ cat $DEVDATA/makes2.txt 
#scelisdev02@cca175-m:~/training_materials/devsh/exercises$ 

#scelisdev02@cca175-m:~/training_materials/devsh/exercises$ hdfs dfs -put $DEVDATA/makes*.txt /devsh_loudacre/

makes1RDD = sc.textFile("/devsh_loudacre/makes1.txt")

for make in makes1RDD.collect(): print(make)
makes2RDD = sc.textFile("/devsh_loudacre/makes2.txt")
for make in makes2RDD.collect(): print(make)

allMakesRDD = makes1RDD.union(makes2RDD)
allMakesRDD.collect()
for make in allMakesRDD.collect(): print(make)

distinctRDD = allMakesRDD.distinct()
for makes in distinctRDD.collect(): print(makes)

intersectionRDD = makes1RDD.intersection(makes2RDD)
for makes in intersectionRDD.collect(): print(makes)

subtractRDD = makes1RDD.subtract(makes2RDD)
for makes in subtractRDD.collect(): print(makes)

zipRDD = makes1RDD.zip(makes2RDD)
for makes in zipRDD.collect(): print(makes)