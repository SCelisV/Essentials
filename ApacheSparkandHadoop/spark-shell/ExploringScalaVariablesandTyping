//------------------
//Hands-On Exercise: Exploring Scala Variables and Typing
//------------------


val ambientTemp = 19

ambientTemp = 47
                   ^
val ambientTemp = 27.0

val ambientTemp = 19

ambientTemp = 47

val ambientTemp = 27.0
var deviceTemp = 21

ambientTemp.getClass
deviceTemp.getClass
deviceTemp = ambientTemp
deviceTemp = 45
var deviceTemp = 33.1 
var deviceTemp = 33.1
val phoneModel: String = "Sorrento"
val temp: Int = 30
val location: Double = 33.1765
val tempC = 27
val c_to_f = 9/5
val tempF = tempC * c_to_f + 32
val tempC = 27.0
val c_to_f =  9.0/5.0
val tempF = tempC * c_to_f + 32
println(tempC.getClass, tempF.getClass)
val cpuT1 = 17
val cpuT2 = 38
val averageCPU = (cpuT1 + cpuT2) / 2 
val averageCPU: Double = (cpuT1 + cpuT2) / 2
val averageCPU: Double = (cpuT1 + cpuT2) / 2.0
println("Average CPU: " + averageCPU)
println("Expected CPU utilization: " + (cpuT2 - (cpuT2 * reduction) + "%"))
cpuT1 += 1
cpuT1.getClass
var cpuT1 = 17
cpuT1 += 1
println( cpuT1 )
val cpuT1: Int = 35
val cpuT2: Double = 37.23
cpuT1.toDouble
cpuT2.toInt
cpuT1.getClass
cpuT2.getClass
cpuT2.toString
cpuT2.getClass
"cpuT1: " + cpuT1 + " cpuT2: " + cpuT2
val cpuT1: Int = 35
cpuT1.toDouble
cpuT1.getClass
val cpuT2: Double = 37.23
cpuT2.toInt
cpuT2.getClass
"cpuT1: " + cpuT1 + " cpuT2: " + cpuT2
cpuT2.toString
cpuT2.getClass
"cpuT1: " + cpuT1 + " cpuT2: " + cpuT2
cpuT1.getClass
cpuT2.getClass
cpuT1.

math.sqrt(192)
import scala.math.sqrt
sqrt(192)

///home/hadoop/0_DEVELOP__0_DEVELOP__0_DEVELOP__/Scala/IntelliJProjects/scalaPUE/files
//vi sample_one_record.txt

val record = "2014-03-15:10:10:31, Titanic 4000, 1882b564-c7e0-4315-aa24-228c0155ee1b, 58, 36, 39, 31, 15, 0, TRUE, enabled, enabled, 37.819722,-122.478611"

println(record)
record.length

println(record)
record.contains("Titanic")
record.indexOf("Titanic")

record.substring(21,28).toUpperCase

val model_name = record.substring(21,28)

model_name.toUpperCase

val model = record.substring(21,33)

val model_split = model.split(' ')

model_split

model_split(0)

model_split(1)

model_split(1).toInt

model_split(1).getClass

model_split.getClass

model_split(0).getClass

val model_number= model_split(1).toInt

model_number.getClass

val record2 = "2014-03-15:10:10:31, Titanic 4000, 1882b564-c7e0-4315-aa24-228c0155ee1b, 58, 36, 39, 31, 15, 0, TRUE, disabled, enabled, 37.819722,- 122.478611"

record2.containsSlice("connected")

record2.containsSlice("enabled")

record2.containsSlice("disabled")

val bluetooth = record2.indexOfSlice("disabled")

"disabled".length

val bluetooth = record2.substring(record2.indexOfSlice("disabled"), record2.indexOfSlice("disabled") + "disabled".length)

println("Bluetooth: ", bluetooth);

val wifi = record2.substring(record2.indexOfSlice("enabled"), record2.indexOfSlice("enabled") + "enabled".length)

println("WiFi: ", wifi)

println("Bluetooth and WiFi have the same status: " + (bluetooth == wifi))