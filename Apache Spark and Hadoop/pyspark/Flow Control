#------------------
#Hands-On Exercise: Flow Control
#-----------------

lines = [ ]
filename = 'files/loudacre.log'
file = open(filename,'rt')
lines = file.readlines()
file.close()
brandindex = set()
modelindex = set()
record = []
for line in lines:
    # los campos de cada line estan delimitados por coma
    record = line.split(',')
    # el modelo es el campo 1 y esta separado por espacio
    model = record[1].split(' ')
    brandindex.add(model[0])
    modelindex.add(model[1])

print("brandindex: ", brandindex)
print("modelindex: ", modelindex)

brandindex = sorted(brandindex)
modelindex = sorted(modelindex)

print("brandindex: ", brandindex)
print("modelindex: ", modelindex)

print("len(brandindex): ", len(brandindex))
print("len(modelindex): ", len(modelindex))
len(brandindex):  5
len(modelindex):  46

for brand in brandindex:
    print("brand: ", brand)

for model in modelindex:
    print("model: ", model)

            #5 - Battery available (percent):
            #6 - Signal strength (percent):
            #7 - CPU utilization (percent):
            #8 - RAM memory usage (percent):
            
for i in range(5,9):
    record[i] = int(record[i])

    record[3] = 9/5 * int(record[3]) + 32
    record[4] = 9/5 * int(record[4]) + 32  # Ambient temp

  if record[9]  == "TRUE":
     record[9]  = True
  else:
     record[9]  = False

            #12 - Latitude - 13 - Longitude
            record[12] = float(record[12])
            record[13] = float(record[13])

             model_number = record[1].split('')
             record.insert(1, model_number[0])

             line_lst.append(record)

             line_tuple = tuple(line_lst)
             pritn("len(line_lst): ", len(line_lst))
             print("len(line_tuple): ", len(line_tuple))
             print("type(line_tuple): ", type(line_tuple))

line_lst = [ ]
record  = [ ]
line_tuple = ( )

lines = [ ]
filename = 'files/loudacre.log'
file = open(filename, 'rt')
lines = file.readlines()
file.close()

for line in lines:
  record  = line.split(',')
# -- leave these fields unchanged --
#
#               dts = record[0]
#             model = record[1]
#          uniqueID = record[2]
#

# -- convert temperature to F
  record[3] = 9/5 * int(record[3]) + 32  # Device temp
  record[4] = 9/5 * int(record[4]) + 32  # Ambient temp

# -- convert numerical strings to integers
#          batt    = int(record[5])
#          signal  = int(record[6])
#          cpu     = int(record[7])
#          ram     = int(record[8])
  for i in range(5,9):
    record[i] = int(record[i])

# -- convert gps status to bool
#  gps    = record[9]
  if record[9]  == "TRUE":
     record[9]  = True
  else:
     record[9]  = False

# -- leave these fields unchanged --
#
#         btooth   = record[10]
#           wifi   = record[11]
#
# -- convert location to float
  record[13]  = float(record[12])                # Latitude
  record[13]  = float(record[13])                # Longitude

# --  split out the brand name and add it in a separate field
#
#        Note that the indexes for most fields just shifted right by one
#
  model = record[1].split(' ')
  record.insert(1,model[0])

# -- field processing is complete
# -- collect the modified record in line_lst
#
  line_lst.append(record)

# -- processing is done -- cast the tuple
line_tuple = tuple(line_lst)

print("Longitud in line_lst: len(line_lst): ", len(line_lst))
print("line_lst is a type(line_lst): ", type(line_lst))
print("Number of records in line_tuple: len(line_tuple): ", len(line_tuple))
print("line_tuple is a type(line_tuple): ", type(line_tuple))

count_model = 0
count_GPS = 0
for line in line_tuple:
    if line[1] == 'Sorrento':
       count_model += 1
       if line[10]:
          count_GPS += 1
    
print("There are ", count_model , " Sorrento brand devices and ", count_GPS, " of them had GPS turned on.")

sorrentos = [ line[10] for line in line_tuple if line[1] == "Sorrento" ]        
print("len(sorrentos): ", len(sorrentos))
print("sorrentos.count(True): ", sorrentos.count(True))
